---
source: tests/insta_test.rs
expression: tester.tokens().as_ref().unwrap()
---
[
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 0,
            n_line: 1,
        },
    },
    Token {
        kind: Ident(
            "main",
        ),
        pos: Position {
            n_char: 4,
            n_line: 1,
        },
    },
    Token {
        kind: OpenDelim(
            Paren,
        ),
        pos: Position {
            n_char: 8,
            n_line: 1,
        },
    },
    Token {
        kind: CloseDelim(
            Paren,
        ),
        pos: Position {
            n_char: 9,
            n_line: 1,
        },
    },
    Token {
        kind: OpenDelim(
            Brace,
        ),
        pos: Position {
            n_char: 11,
            n_line: 1,
        },
    },
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 1,
            n_line: 2,
        },
    },
    Token {
        kind: Ident(
            "a",
        ),
        pos: Position {
            n_char: 5,
            n_line: 2,
        },
    },
    Token {
        kind: Semi,
        pos: Position {
            n_char: 6,
            n_line: 2,
        },
    },
    Token {
        kind: OpenDelim(
            Brace,
        ),
        pos: Position {
            n_char: 8,
            n_line: 3,
        },
    },
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 9,
            n_line: 3,
        },
    },
    Token {
        kind: BinOp(
            Star,
        ),
        pos: Position {
            n_char: 13,
            n_line: 3,
        },
    },
    Token {
        kind: Ident(
            "k",
        ),
        pos: Position {
            n_char: 14,
            n_line: 3,
        },
    },
    Token {
        kind: Semi,
        pos: Position {
            n_char: 15,
            n_line: 3,
        },
    },
    Token {
        kind: CloseDelim(
            Brace,
        ),
        pos: Position {
            n_char: 16,
            n_line: 3,
        },
    },
    Token {
        kind: OpenDelim(
            Brace,
        ),
        pos: Position {
            n_char: 8,
            n_line: 4,
        },
    },
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 9,
            n_line: 4,
        },
    },
    Token {
        kind: BinOp(
            Star,
        ),
        pos: Position {
            n_char: 13,
            n_line: 4,
        },
    },
    Token {
        kind: Ident(
            "i",
        ),
        pos: Position {
            n_char: 14,
            n_line: 4,
        },
    },
    Token {
        kind: Semi,
        pos: Position {
            n_char: 15,
            n_line: 4,
        },
    },
    Token {
        kind: OpenDelim(
            Brace,
        ),
        pos: Position {
            n_char: 17,
            n_line: 4,
        },
    },
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 18,
            n_line: 4,
        },
    },
    Token {
        kind: Ident(
            "k",
        ),
        pos: Position {
            n_char: 22,
            n_line: 4,
        },
    },
    Token {
        kind: Semi,
        pos: Position {
            n_char: 23,
            n_line: 4,
        },
    },
    Token {
        kind: CloseDelim(
            Brace,
        ),
        pos: Position {
            n_char: 24,
            n_line: 4,
        },
    },
    Token {
        kind: CloseDelim(
            Brace,
        ),
        pos: Position {
            n_char: 25,
            n_line: 4,
        },
    },
    Token {
        kind: Type(
            Int,
        ),
        pos: Position {
            n_char: 8,
            n_line: 5,
        },
    },
    Token {
        kind: Ident(
            "c",
        ),
        pos: Position {
            n_char: 12,
            n_line: 5,
        },
    },
    Token {
        kind: OpenDelim(
            Bracket,
        ),
        pos: Position {
            n_char: 13,
            n_line: 5,
        },
    },
    Token {
        kind: Num(
            2,
        ),
        pos: Position {
            n_char: 14,
            n_line: 5,
        },
    },
    Token {
        kind: CloseDelim(
            Bracket,
        ),
        pos: Position {
            n_char: 15,
            n_line: 5,
        },
    },
    Token {
        kind: Semi,
        pos: Position {
            n_char: 16,
            n_line: 5,
        },
    },
    Token {
        kind: CloseDelim(
            Brace,
        ),
        pos: Position {
            n_char: 4,
            n_line: 6,
        },
    },
    Token {
        kind: Eof,
        pos: Position {
            n_char: 0,
            n_line: 7,
        },
    },
]
